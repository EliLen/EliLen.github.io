{"meta":{"title":"Mr.EliLen","subtitle":null,"description":"Learning is like sailing","author":"EliLen","url":"https://Elilen.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-04-30T00:41:34.995Z","updated":"2019-04-30T00:41:34.995Z","comments":true,"path":"404.html","permalink":"https://Elilen.github.io/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"Zyue","date":"1999-05-20T01:09:09.000Z","updated":"2019-07-23T02:50:03.168Z","comments":true,"path":"Zyue/index.html","permalink":"https://Elilen.github.io/Zyue/index.html","excerpt":"","text":"送给那个远方的她2018/11/25我想和你谈谈不灭的鬼怪和神论人间的烟火与车窗五月的第一场黄昏和一场恋爱 2019/05/05站有两个地方最感人：一个入口， 一个出口。一个是不想让你走，一个是等你回来。"},{"title":"Lifestyle","date":"2019-04-26T02:45:17.000Z","updated":"2019-04-26T02:45:17.651Z","comments":true,"path":"Lifestyle/index.html","permalink":"https://Elilen.github.io/Lifestyle/index.html","excerpt":"","text":""},{"title":"关于小站","date":"2019-06-17T14:33:03.762Z","updated":"2019-06-17T14:33:03.762Z","comments":true,"path":"about/index.html","permalink":"https://Elilen.github.io/about/index.html","excerpt":"","text":"关于小站 关于本人 安全萌新一枚，望大佬带带。。 关于本站 本站用于学习和交流技术，求求大佬多来。 主题使用： Material-X主题问题：有任何问题可查看 主题文档 关于友链 想添加友链的朋友请将本站主页https:///elilen.github.io添加到贵站的友链中，然后在我的友链页留言，我看到后会及时添加（只限非盈利性网站）。 欢迎大佬"},{"title":"归档","date":"2019-04-24T12:23:23.000Z","updated":"2019-04-26T09:50:56.043Z","comments":false,"path":"archives/index.html","permalink":"https://Elilen.github.io/archives/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2019-04-29T12:36:29.668Z","updated":"2019-04-29T12:36:29.668Z","comments":true,"path":"categories/index.html","permalink":"https://Elilen.github.io/categories/index.html","excerpt":"","text":""},{"title":"My Friends","date":"2019-06-12T09:23:32.511Z","updated":"2019-06-12T09:23:32.511Z","comments":true,"path":"friends/index.html","permalink":"https://Elilen.github.io/friends/index.html","excerpt":"","text":"需要互链的请留下名称、头像链接、和一到两个标签~~如果觉得分组不合适的，请给我留言我尽量满足格式如下： 名称： EliLen’s blog头像： http://pqpcdg3eo.bkt.clouddn.com/img/19.04.25/TX.jpg地址： https://elilen.github.io标签： web"},{"title":"所有标签","date":"2019-05-10T11:56:17.845Z","updated":"2019-04-29T12:36:28.658Z","comments":true,"path":"tags/index.html","permalink":"https://Elilen.github.io/tags/index.html","excerpt":"","text":""},{"title":"精致图片","date":"2019-04-24T13:00:14.000Z","updated":"2019-04-25T11:23:22.862Z","comments":true,"path":"Lifestyle/images/index.html","permalink":"https://Elilen.github.io/Lifestyle/images/index.html","excerpt":"最近发现的国风动漫","text":"最近发现的国风动漫"},{"title":"精选歌单","date":"2019-04-24T12:45:23.000Z","updated":"2019-04-25T11:16:47.623Z","comments":true,"path":"Lifestyle/musics/index.html","permalink":"https://Elilen.github.io/Lifestyle/musics/index.html","excerpt":"","text":"送给那些远方的人 一只简简单单的歌单"},{"title":"影音分享","date":"2019-04-24T12:45:15.000Z","updated":"2019-04-25T11:54:37.556Z","comments":true,"path":"Lifestyle/videos/index.html","permalink":"https://Elilen.github.io/Lifestyle/videos/index.html","excerpt":"","text":"值得你看的电影"}],"posts":[{"title":"DNS","slug":"dns","date":"2019-06-13T05:30:57.000Z","updated":"2019-07-23T08:22:31.462Z","comments":true,"path":"2019/06/13/dns/","link":"","permalink":"https://Elilen.github.io/2019/06/13/dns/","excerpt":"DNS 的安装及配置","text":"DNS 的安装及配置 安装DNS服务需安装bind和bind-utils 1yum -y install bind bind-utils 修改配置文件 修改配置文件 /etc/named.conf 检查文件语法是否错误 1named-checkconf /etc/named.conf 添加正向反向区域配置 /etc/named.rfc1912.zones 创建正向区域文件 /var/named/scitc.zx cp -a (复制文件的所有属性，包含SElinux和权限) 1cp -a named.localhost scitc.zx —》》 创建反向区域文件 /var/named/scitc.fx 1cp -a abc.zx scitc.fx —》》 正向几个A对应几个PTR，，别名不需要写，，两个A用2 检查文件语法是否错误 123named-checkzone scitc.com.cn scitc.zx --检查正向--named-checkzone 1.168.192.in-addr.arpa scitc.fx --检查反向-- 防火墙的配置 1firewall-cmd --reload --重新加载防火墙-- 使用DNS 启动DNS服务 1systemctl start named.service 重启DNS服务 1systemctl restart named.service 开机加载 1systemctl enable named.service 查看DNS状态 1systemctl status named.service 客户端DNS配置 123456vi /etc/resolv.conf ----》》 namedserver 192.168.1.1 nmcli connection modify name ipv4.dns 192.168.1.1 测试nslookup dig","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"DNS","slug":"DNS","permalink":"https://Elilen.github.io/tags/DNS/"}]},{"title":"磁盘分区和挂载","slug":"disk","date":"2019-06-05T12:15:15.000Z","updated":"2019-07-23T08:21:33.303Z","comments":true,"path":"2019/06/05/disk/","link":"","permalink":"https://Elilen.github.io/2019/06/05/disk/","excerpt":"基本分区、逻辑卷管理和swap扩容挂载","text":"基本分区、逻辑卷管理和swap扩容挂载 磁盘分区新建一个2G的磁盘sdb,sdb1大小为500M，sdb2大小为1G，将两个分区以XFS文件系统挂载到系统中。 （1）添加一个2G的磁盘 （2）fdisk -l 查看系统分区详细信息 （3）fdisk /dev/sdb 对sdb磁盘进行分区 创建两个主分区sdb1和sdb2 （4）partprode /dev/sdb 对磁盘进行更新 （5）mkfs.xfs /dev/sdb1格式化磁盘 （6）mount /dev/sdb1 /mnt/sdb1 挂载磁盘 （7）df -h 检测挂载情况 逻辑卷管理（LVM） 修改分区类型为 LVM 创建物理卷 pvdisplay –查看详细信息– 物理卷中创建卷组 vgdisplay –查看详细信息– 卷组中创建逻辑卷 lvdisplay –查看详细信息– 两种方式创建 格式化逻辑卷 123mkfs.xfs /dev/myvg/mylv1mkfs.ext4 /dev/myvg/ 挂载逻辑卷 12345mkdir /mnt/lv1 /mnt/lv2mount /dev/myvg/mylv1 /mnt/lv1mount /dev/myvg/mylv2 /mnt/lv2 df -h 检测挂载情况 扩展逻辑卷 123lvextend -L 1G /dev/myvg/lv1xfs_growfs /dev/myvg/lv1 (格式化新加的) 扩展卷组（逻辑卷不够用了，需要扩展卷组，再来扩展逻辑卷） 1vgextend -L 1550M /dev/myvg/lv1 swap扩容挂载1fdisk /dev/sdb 添加一个新的分区 n 修改分区的类型 t 查看所有类型 t -l 修改为swap类型（82） 保存 w 123456789partprobe --强制更新分区--free -h --查看内存使用情况--mkswap /dev/sdb4 --格式化sdb4分区--swapon /dev/sdb4 --挂载sdb4到swap上--swapoff /dev/sdb4 --取消sdb4挂载到swap上-- 永久挂载 修改配置文件 /etc/fstab 1vi /etc/fstab —-&gt;&gt; 12345swapon -a --更新所有swap分区--free -h --查看内存使用情况--reboot --重启验证-- 所有代码123456789101112131415161718192021fdisk /dev/sdcpartprobe pvcreate /dev/sdc1 /dev/sdc2 /dev/sdc3vgcreate myvg /dev/sdc1 /dev/sdc2lvcreate -L 800M -n lv1 myvglvcreate -l 150 -n lv2 myvgmkfs.xfs /dev/myvg/lv1mkfs.ext4 /dev/myvg/lv2mkdir /mnt/lv1 /mnt/lv2mount /dev/myvg/lv1 /mnt/lv1mount /dev/myvg/lv2 /mnt/lv2 123456789lvextend -L 1G /dev/myvg/lv1xfs_growfs /dev/myvg/lv1vgextend myvg /dev/sdc3lvextend -L 1550M /dev/myvg/lv2resize2fs /dev/myvg/lv2","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"磁盘分区","slug":"磁盘分区","permalink":"https://Elilen.github.io/tags/磁盘分区/"},{"name":"挂载磁盘","slug":"挂载磁盘","permalink":"https://Elilen.github.io/tags/挂载磁盘/"}]},{"title":"Linux网络配置","slug":"network","date":"2019-06-02T03:56:57.000Z","updated":"2019-07-23T08:23:22.823Z","comments":true,"path":"2019/06/02/network/","link":"","permalink":"https://Elilen.github.io/2019/06/02/network/","excerpt":"网卡会话、链路聚合和SSH","text":"网卡会话、链路聚合和SSH 网卡会话会话name（ELI-network） 建立网络会话 并给IP 1nmcli connection add con-name ELI-network ifname eno16777736 type ethernet ip4 192.168.1.10/24 gw4 192.168.1.1 修改IP 和 网关 1nmcli connection modify ELI-network ipv4.addresses &apos;192.168.200.10 192.168.200.1&apos; ipv4.dns 8.8.8.8 配置DNS 1nmcli connection modify ELI-network ipv4.dns 202.96.69.38 设置 自动/手动IP 12345nmcli connection modify ELI-network ipv4.method manual --ipv4.method manual //选择手动-- --ipv4.method auto //选择自动-- 启动网卡 1nmcli connection up ELI-network 查看会话 123nmcli connection show nmcli connection show ELI-network --查看ELI-network网络的详情-- 查看网络配置 1ip addr 修改会话信息 1nmcli connection modify ELI-network 重启网络服务 123systemctl restart/ stop/ start/ enable network /etc/init.d/networking restart 双IP网卡 12345cd /etc/sysconfig/network-scripts/lsvim ifcfg-ELI-network --修改配置文件-- 链路聚合 两张网卡聚合 12345678910111213ifname 后面的名字没有意义（可随意）nmcli connection add con-name team ifname team type team config &apos;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;activebackup&quot;&#125;&#125;&apos; --链路聚合的模式--nmcli connection add con-name team-p1 ifname eno16777736 type team-slave master teamnmcli connection add con-name team-p2 ifname eno33554976 type team-slave master teamnmcli connection show team-slave // 成员master // 主人 ping 报错（不是线路问题，是软件问题） 1.重启网卡 2.down 掉网卡 在 up 起来 看team的网卡信息 1teamdctl team state 断开链接网卡 1nmcli device disconnect eno16777736 重新链接网卡 1nmcli device connect eno16777736 ssh远程登录 -X显示图形界面 1ssh [-X] Eli@192.168.111.1 --端口：22-- 拷贝本地文件到远端目录 scp：基于ssh的安全远端拷贝文件与目录 scp –r 文件/目录 Eli@192.168.111.1:远端目录 1scp –r Eli@192.168.111.1:远端目录[/文件] 本地目录 拷贝远端《文件/目录 －r》到本地目录 1sftp Eli@192.168.111.1 get/下载 put/上传 --基于ssh的安全ftp传送-- ssh免密登录（一般不使用root登录ssh） 1234567ssh-keygen --创建秘钥--cd .ssh --ls查看秘钥是否添加--ssh-copy-id Eli@192.168.111.1 --将秘钥添加至服务器--ssh Eli@192.168.111.1 --登录ssh测试--","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"网络配置","slug":"网络配置","permalink":"https://Elilen.github.io/tags/网络配置/"},{"name":"SSH登录","slug":"SSH登录","permalink":"https://Elilen.github.io/tags/SSH登录/"},{"name":"链路聚合","slug":"链路聚合","permalink":"https://Elilen.github.io/tags/链路聚合/"}]},{"title":"Mimikatz神器","slug":"mimikatz","date":"2019-05-20T06:45:57.000Z","updated":"2019-07-23T04:02:55.932Z","comments":true,"path":"2019/05/20/mimikatz/","link":"","permalink":"https://Elilen.github.io/2019/05/20/mimikatz/","excerpt":"windows密码抓取神器","text":"windows密码抓取神器 win密码抓取方法一： 运行主程序：mimikatz.exe 输入：privilege::debug 提升权限 输入：inject::process lsass.exe sekurlsa.dll 将sekurlsa.dll 注入到lsass.exe 中（运行到这一步会出现拒绝访问的提示） 输入：@getLogonPasswords 即可获取hash和当前用户的明文密码！ 原理就是登陆的时候输入的密码，经过 lsass.exe 里的wdigest和tspkg两个模块调用后，它们对之进行加密处理，而没有进行擦除，而且该加密通过特征可以定位，并且按照微软的算法可逆。 只要登陆过，就可以抓出来，它进行枚举的。简单地说，在 Windows 中，当用户登录时，lsass.exe 使用一个可逆的算法，加密过的明文密码，并且把密文保存在内存中，没有清理，然后可以抓出来，还原。 也就是说，开机以后，只要是登陆过的用户，在没重启前（因为重启内存就清零了，这里不包括使用其他方法清理内存），都可以抓出来，注销也是无用的 方法二（直接调用sekurlsa模块） 运行主程序：mimikatz.exe 输入：privilege::debug 提升权限 输入：sekurlsa::logonPasswords full 工具使用cmd执行 mimikatz 常规的操作使用命令 mimikatz # cls –&gt;清屏. mimikatz # exit –&gt;退出mimikatz. mimikatz #version –&gt;查看当前的mimikatz的版本. 随便输入”xxx::”，会提示error,可看到所有模块。 查看列表中模块的具体参数同样可以输入”模块::”来查看，比如:”inject::”,如图： 可以看到模块inject的具体参数有pid,process,service等…… 系统方面的操作使用命令:system mimikatz #system::user –&gt;查看当前登录的系统用户 mimikazt #system::computer –&gt;返回当前的计算机名称 在服务器终端的操作命令: ts ts::sessions –&gt;显示当前的会话 ts::processes –&gt;显示服务器的进程和对应的pid情况等。 系统服务相关的操作使用命令:service service::list –&gt;列出系统的服务 service::remove –&gt;移除系统的服务 service::start stop 服务名称 –&gt;启动或停止服务 系统进程相关操作的使用命令:process process::list –&gt;列出进程 process::suspend 进程名称 –&gt;暂停进程 process::stop 进程名称 –&gt;结束进程 process::modules –&gt;列出系统的核心模块及所在位置 系统权限相关操作使用命令:privilege privilege::list –&gt;列出权限列表 privilege::enable –&gt;激活一个或多个权限 privilege::debug –&gt;提升权限 打开系统文件：nogpo nogpo::cmd –&gt;打开系统的cmd.exe nogpo::regedit –&gt;打开系统的注册表 nogpo::taskmgr –&gt;打开任务管理器 获取系统用户信息：sekurlsa sekurlsa::wdigest –&gt;获取本地用户信息及密码（win2008后无用） sekurlsa::tspkg –&gt;获取tspkg用户信息及密码 sekurlsa::logonPasswords –&gt;获登陆用户信息及密码 系统线程相关操作使用命令:thread 系统句柄相关操作使用命令:handle 加密相关操作使用命令:crypto 注入操作使用命令:inject","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Tools","slug":"Study/Tools","permalink":"https://Elilen.github.io/categories/Study/Tools/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://Elilen.github.io/tags/Tools/"},{"name":"kali","slug":"kali","permalink":"https://Elilen.github.io/tags/kali/"}]},{"title":"SELinux","slug":"SElinux","date":"2019-05-15T07:56:57.000Z","updated":"2019-07-23T03:02:39.423Z","comments":true,"path":"2019/05/15/SElinux/","link":"","permalink":"https://Elilen.github.io/2019/05/15/SElinux/","excerpt":"安全上下文管理工具 SElinux","text":"安全上下文管理工具 SElinux SElinux 查看 ls –context test.txt ls -lZ test.txt —显示安全上下文— chcon修改安全上下文 chcon -t etc_t test.txt chcon -t httpd_sys_content_t /tmp/web restorecon修改安全上下文为默认值 —httpd_sys_content_t— 修改安全上下文由初始的user_tmp_t修改为默认的httpd_sys_content_t restorecon -Rv /tmp/exp semanage 修改安全上下文 修改SElinux默认目录的安全上下文 语法： semanage fcontext -{a|b|m} [-frst] file_name 例如：修改默认安全上下文为httpd_sys_content_t semanage fcontext -a -t httpd_sys_content_t “/web(/.*)?” （web目录下所有的文件） 修改端口安全上下文不用重新加载 semanage port -l | grep ssh 查看当前允许的端口信息 semanage port -a -t ssh_port_t -p tcp 1234 添加一个端口到ssh_port_t 修改文本文件安全上下文要重新加载 —强制重新加载安全上下文— restorecon -R/-r 递归 -v 显示过程 -F 强制 restorecon -vRF /web getsebool -a —查看所有selinux的布尔值— setsebool -P（表示永久生效） ftpd_anon_write on —设置指定的布尔值— getenforce —得到当前的SElinux— setenforce —更改当前的SElinux 1 or 0 —","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"SElinux","slug":"SElinux","permalink":"https://Elilen.github.io/tags/SElinux/"}]},{"title":"NFS","slug":"nfs","date":"2019-05-12T07:56:57.000Z","updated":"2019-07-23T03:02:28.366Z","comments":true,"path":"2019/05/12/nfs/","link":"","permalink":"https://Elilen.github.io/2019/05/12/nfs/","excerpt":"NFS共享目录","text":"NFS共享目录 服务端： mkdir /tmp/nfs vim /etc/exports ——–&gt;&gt;&gt; 123/tmp/nfs 192.168.1.2(可使用*代表所有) (rw,no_root_squash)/mnt/cdrom *(rw,no_root_squash) cd /tmp/nfs echo 11111 &gt; 11.txt echo 2222 &gt; 22.txt —配置防火墙— firewall-cmd –add-service=nfs –permanent firewall-cmd –add-service=rpc-bind –permanent firewall-cmd –add-service=mountd –permanent firewall-cmd –reload exportfs -r —重新加载exportfs— systemctl enable nfs-server.service —开机自启— systemctl start nfs-server.service —启动— showmount -e 127.0.0.1 —服务器测试— 客户端： mkdir /mnt/nfs showmount -e 192.168.1.1 mount -t nfs 192.168.1.1:/tmp/nfs /mnt/nfs mount -t nfs 192.168.1.1:/mnt/cdrom /mnt/nfscdrom vim /etc/fstab ——-&gt;&gt;&gt; 1/192.168.1.1:/tmp/nfs /mnt/nfs iso9660 defaults 0 0 df -h —查看磁盘情况—","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"NFS","slug":"NFS","permalink":"https://Elilen.github.io/tags/NFS/"}]},{"title":"Firewall-Cmd","slug":"firewall-cmd","date":"2019-05-08T07:56:57.000Z","updated":"2019-07-23T03:02:21.138Z","comments":true,"path":"2019/05/08/firewall-cmd/","link":"","permalink":"https://Elilen.github.io/2019/05/08/firewall-cmd/","excerpt":"Linux防火墙管理工具","text":"Linux防火墙管理工具 启动firewalld服务 systemctl start firewalld.service 设置开机自启 systemctl enable firewalld.service 查看firewalld服务状态 firewall-cmd –state systemctl status firewalld 重新加载firewalld配置 firewall-cmd –reload 设置默认区域 firewall-cmd –get-zones —查看可选区域— firewall-cmd –get-default-zone —查询默认区域— firewall-cmd –set-default-zone=public —设置默认区域为public— firewall-cmd –get-default-zone 查看public区域的详细配置 firewall-cmd –zone=public –list-all 将server的网卡添加到public区域 firewall-cmd –zone=public –add-interface=eno16777736 –permanent 保存到配置文件中 —永久有效— 将http服务添加到internal区域中 —允许内网访问http服务— firewall-cmd –zone=internal –add-service=http –permanen 将http服务添加到public区域中 —允许外网访问http服务— firewall-cmd –zone=public –add-service=http –permanent 允许外网访问FTP firewall-cmd –zone=public –add-service=ftp –permanent firewall-cmd –zone-public –add-service=ftp –pemanent 删除指定区域SSH服务 —禁止外网访问SSH— firewall-cmd –zone=public –remove-service=ssh –permanent 不允许ping测试 —拒绝外网ping回复— firewall-cmd –zone=public –list-icmp-blocks —查看— firewall-cmd –zone=public –add-icmp-block=echo-request –permanent 重载防火墙 firewall-cmd –reload // 配置SNAT转发 将连接外网的网卡连接到外网区域 firewall-cmd –zone=external –change-interface=eno16777736 –permanent 将连接内网的网卡连接到内网区域 firewall-cmd –zone=internal –change-interface=eno33554984 –permanent 查看external区域的详细配置 firewall-cmd –zone=external –list-all —查看masquerade：yes—","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"Firewall-cmd","slug":"Firewall-cmd","permalink":"https://Elilen.github.io/tags/Firewall-cmd/"}]},{"title":"Apache","slug":"Apache","date":"2019-05-05T07:56:57.000Z","updated":"2019-07-23T06:47:25.049Z","comments":true,"path":"2019/05/05/Apache/","link":"","permalink":"https://Elilen.github.io/2019/05/05/Apache/","excerpt":"Web 站点建立","text":"Web 站点建立 主机名区分站点 修改dns指定的配置文件 vim /var/named/scitc.zx ——&gt;&gt;&gt; 12 news IN CNAME www​ oa IN CNAME www 创建主配置文件 —conf.d是用户自己的配置文件，可以根据http.conf文件改— cd /etc/httpd/conf.d mkdir www.conf vim www.conf —创建并修改主配置文件— ——&gt;&gt;&gt; 12345678910111213 &lt;VirtualHost *:80&gt; ---注意格式--- ​ ServerName www.scitc.com.cn:80 ---网站的域名---​ DocumentRoot &quot;/web/scitc/www&quot; ---主配置文件指定的目录---​ &lt;/VirtualHost&gt;​ &lt;Directory &quot;/web/scitc/www&quot;&gt; ---主配置文件指定的目录---​ Require all granted​ &lt;/Directory&gt; 创建主配置文件指定的目录 mkdir -p /web/scitc/www (-p 是创建子目录) cd /web/scitc/www echo “This is www” &gt; index.html 设置/web/scitc/www的安全上下文 ls -Z /web/scitc/www —查看安全上下文— semanage fcontext -a -t httpd_sys_content_t “/web(/.*)?” restorecon -vRF /web —重新加载安全上下文— -v显示详细过程 重启Apache服务 systemctl restart httpd.service —353安全上下文有错— Firefox –测试– 端口区分站点 创建主配置文件 —conf.d是用户自己的配置文件，可以根据http.conf文件改— cd /etc/httpd/conf.d mkdir www10080.conf vi www10080.conf ——-&gt;&gt;&gt; 123456789101112131415 Listen 10080​ &lt;VirtualHost *:10080&gt; ---注意格式---​ ServerName www.scitc.com.cn:10080 ---网站的域名---​ DocumentRoot &quot;/web/scitc/www10080&quot; ---主配置文件指定的目录---​ &lt;/VirtualHost&gt;​ &lt;Directory &quot;/web/scitc/www10080&quot;&gt; ---主配置文件指定的目录---​ Require all granted​ &lt;/Directory&gt; 创建指定的新的子目录 mkdir /web/scitc/www10080 写入一个新网页 echo “www10080 www10080 www10080” &gt; index.html 允许端口通过防火墙 firewall-cmd –add-port=10080/tcp –permanent firewall-cmd –reload 修改端口安全上下文 semanage port -l | grep http —查看默认的安全上下文配置— semanage port -a -t http_port_t -p tcp 10080 重新加载Apache服务 systemctl restart httpd.service 测试 curl www.scitc.com.cn:10080 虚拟目录区分站点 创建一个虚拟目录 mkdir /web/scitc/www/123 echo “5555555555” &gt; /web/scitc/www/123/index.html 修改主配置文件 ——-&gt;&gt;&gt;&gt;添加如下几行 12345 &lt;Directory &quot;/web/scitc/www/123&quot;&gt;​ Require all granted​ &lt;/Directory&gt; 所有代码123456789101112131415161718192021222324252627282930313233343536373839404142434445cd /etc/httpd/conf.dlsvim www.confcp www.conf news.confcp www.conf sports.confvim news.conf vim sports.conf mkdir -p /srv/www/wwwcd /srv/wwwmkdir news sportscd wwwecho &quot;wwwwwwwwwwwwwwwwwwww&quot; &gt; index.htmlcd ..cd news/echo &quot;newsssssssssssssssssssss&quot; &gt; index.htmlcd ..cd sports/echo &quot;sportstttttttttttttttt&quot; &gt; index.htmlls -Z /var/www/htmlcdsemanage fcontext -a -t httpd_sys_content_t &apos;/srv(/.*)?&apos;restorecon -vRF /srvsystemctl restart httpd 12345678910111213141516171819202122232425cp news.conf news10080.confvim news10080.conf mkdir /web/scitc/news10080cd /web/scitc/news10080echo &quot;1008010080100801008010080100801008010080&quot; &gt; index.htmlfirewall-cmd --add-port=10080/tcp --permanent firewall-cmd --reload semanage port -l | grep httpsemanage port -a -t http_port_t -p tcp 10080semanage port -l | grep httpcd news10080/ls -Z index.html systemctl restart httpd.service","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"Apache","slug":"Apache","permalink":"https://Elilen.github.io/tags/Apache/"}]},{"title":"Yum","slug":"yum","date":"2019-05-02T07:56:57.000Z","updated":"2019-07-23T06:49:24.424Z","comments":true,"path":"2019/05/02/yum/","link":"","permalink":"https://Elilen.github.io/2019/05/02/yum/","excerpt":"yum源的挂载和使用","text":"yum源的挂载和使用 yum源挂载 创建，修改 mkdir /mnt/cdrom 创建挂载点 mount /dev/cdrom /mnt/cdrom cd /mnt/cdrom yum-config-manager –add-repo=file:///mnt/cdrom cd /etc/yum.repos.d/ vim mnt_cdrom.repo —–&gt;&gt;&gt; 1​ gpgcheck=0 永久挂载 —光盘格式 iso9660— vim /etc/fstab —–&gt;&gt;&gt; 1/dev/cdrom /mnt/cdrom iso9660 defaults 0 0 mount -a mount -a 将/etc/fstab的所有内容重新加载 mount 是可以显示/etc/fstab的内容。 查看仓库 yum list 搜索/安装/卸载 软件 yum search ftp yum install ftp.x86_64 -y yum remove ftp.x86_64 -y 报错解决","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Linux笔记","slug":"Study/Linux笔记","permalink":"https://Elilen.github.io/categories/Study/Linux笔记/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://Elilen.github.io/tags/Linux/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://Elilen.github.io/tags/学习笔记/"},{"name":"Yum源","slug":"Yum源","permalink":"https://Elilen.github.io/tags/Yum源/"}]},{"title":"Namp","slug":"nmap","date":"2019-04-29T06:01:57.000Z","updated":"2019-06-18T10:42:14.620Z","comments":true,"path":"2019/04/29/nmap/","link":"","permalink":"https://Elilen.github.io/2019/04/29/nmap/","excerpt":"简单的namp使用手册","text":"简单的namp使用手册 Nmap全面扫描 单个主机 nmap 192.168.10.10 —等同于全开— 多个主机 nmap 192.168.10.11,20,110 nmap 192.168.10.10,172.168.10.11 nmap 192.168.10.1-254 nmap 192.168.10.1/24 —整个子网— 扫描文件里的IP nmap -iL ip.txt 排除IP nmap 192.168.10.1-254 –exclude 192.168.10.5-11 排除文件中的IP nmap 192.168.10.1-254 –exclude exip.txt 随机找几个IP进行扫描 nmap -iR 10 -p22 Nmap -T4 -A -v ip -T4: 指定扫描时使用的时序(1-6，越大越快) -A：使用进攻性方式扫描 -v：显示侦测时的详细信息 Nmap主机发现-sL：只列举IP，不进行主机发现（list scan） -sn：只进行主机发现，不进行端口扫描（探测存活主机）（ping scan） -Pn：跳过主机发现，直接扫描端口（不判断主机是否在线） -sP：仅使用Ping协议（主机数量大） -n：不用DNS解析，加快扫描速度 -R：总是进行DNS解析 –dns-servers &lt;serv1[,serv2],…&gt;: 指定DNS服务器。 –system-dns: 指定使用系统的DNS服务器 –traceroute: 追踪每个路由节点 Nmap端口发现–默认扫描常见的1000个端口– –端口状态– open：开放 Closed：关闭 Filtered：被防火墙屏蔽，无法确定状态 Unfiltered：未被防火墙屏蔽，但仍无法确定状态 Open|fiktered：开放或者是屏蔽 Closed|filtered：关闭或者是屏蔽 主机端口扫描方式： 扫描ARP协议 —和目标主机处于同一网段时— nmap -PR 192.168.10.11 扫描TCP协议（对目标主机进行扫描） nmap -sS 192.168.10.11 –半开(TCP SYN)扫描 不建立第三次会话（速度快，更安全）– nmap -sT 192.168.10.11 –全开(TCP Connect())扫描 – nmap -sA 192.168.10.11 –发送TCP的ACK包，可扫是否存活– –利用ACK扫描判断端口是否被过滤。针对ACK探测包，未被过滤的端口（无论打开、关闭）会回复RST包。– nmap -sW 192.168.10.11 TCP –windows扫描– —Window扫描方式只对某些TCPIP协议栈才有效。window扫描原理与ACK类似，发送ACK包探测目标端口，对回复的RST包中的Window size进行解析。在某些TCPIP协议栈实现中，关闭的端口在RST中会将Window size设置为0；而开放的端口将Window size设置成非0的值。— 秘密扫描方式来协助探测对方的TCP端口状态 nmap -sN 192.168.10.11 –TCP Null 扫描– nmap -sF 192.168.10.11 –发送FIN标志的数据包– —可以利用FIN扫描方式探测防火墙状态。FIN扫描方式用于识别端口是否关闭，收到RST回复说明该端口关闭，否则说明是open或filtered状态。— 扫描UDP协议（不常用，费时，不方便） nmap -sU 192.168.10.11 主机端口参数： 快速模式，仅扫描TOP 100的端口(-F：Fast mode) nmap -F 192.168.10.11 全部端口 nmap -p “*” 192.168.10.11 指定端口(可连续) nmap -p20-25,443,3306 192.168.10.11 前n个端口 nmap –top-ports 10 192.168.10.11 扫描指定频率以上的端口 nmap –port-ratio（0-1之间） 192.168.10.11 Nmap高级选项 查看本地路由与接口（网络接口信息）-e &lt;interface&gt; nmap -iflist 指定网口与IP地址 nmap -e eth0 192.168.10.10 扫描路由器TFTP nmap –sU –p69 –nvv target —大多数路由器都支持TFTP协议(简单文件传输协议)，该协议常用于备份和恢复路由器的配置文件，运行在UDP 69端口上。使用上述命令可以探测出路由器是否开放TFTP。— 扫描思科路由器 nmap -p1-25,80,512-515,2001,4001,6001,9001 10.20.0.1/16 —思科路由器会在上述端口中运行了常见的服务。列举出上述端口开放的主机，可以定位到路由器设备可能的IP地址及端口状态。— Nmap OS识别 nmap -O 192.168.10.11 Nmap服务版本识别 nmap -sV 192.168.10.11 Nmap输出 扫描结果保存为XML文件 nmap -oX Report.xml 192.168.10.11 只输出open的端口 nmap –open 192.168.10.11 Nmap脚本扫描Nmap提供的命令行参数：： -sC： 等价–script=default，使用默认类别的脚本进行扫描 –script=&lt;Lua scripts&gt;:&lt;Lua scripts&gt; 使用某个和某类脚本扫描，支持通配符 –script-args=&lt;n1=v1,[n2=v2,..]&gt; 为脚本提供默认参数 –script-args-file=filename 使用文件夹为脚本提供参数 –script-tarce 显示脚本执行过程中发送与接收的数据 –script-updatedb：更新脚本数据库 –script-help=&lt;scripts &gt;显示脚本的帮助信息，其中&lt;scripts&gt;可以用逗号分隔 nmap脚本的分类 在调用nmap脚本之前，我们可以先进入script目录，用tab键自动填充来查看有哪些脚本可用 ls /usr/share/nmap/script/mysql- //双击tab 扫描时根据需要设置 –script=类别 ： auth: 负责处理鉴权证书（绕开鉴权）的脚本 broadcast: 在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务 brute: 提供暴力破解方式，针对常见的应用如http/snmp等 default: 使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力 discovery: 对网络进行更多的信息，如SMB枚举、SNMP查询等 dos: 用于进行拒绝服务攻击 exploit: 利用已知的漏洞入侵系统 external: 利用第三方的数据库或资源，例如进行whois解析 fuzzer: 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive: 入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽 safe: 此类与intrusive相反，属于安全性脚本 malware: 探测目标机是否感染了病毒、开启了后门等信息 version: 负责增强服务与版本扫描（Version Detection）功能的脚本 vuln: 负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067 0x01 nmap按脚本分类扫描 负责处理鉴权证书（绕开鉴权）的脚本,也可以作为检测部分应用弱口令 nmap –script=auth 192.168.10.10 提供暴力破解的方式，可对数据库，smb，snmp等进行简单的暴力猜解 nmap –script=brute 192.168.10.10 默认脚本扫描，主要收集各种应用服务的信息，收集后，在针对具体服务进行攻击 nmap –script=default 192.168.137. 或者 nmap -sC 192.168.137. 检查是否存在常见漏洞 nmap –script=vuln 192.168.10.10 在局域网探查更多服务开启状况 nmap -n -p445 –script=broadcast 192.168.10.10 利用第三方的数据库或资源，例如进行whois解析 nmap –script=external 202.103.243.110 0x02 nmap按应用服务扫描 （1）vnc扫描 检查vnc bypass nmap –script=realvnc-auth-bypass 192.168.10.10 检查vnc认证方式 nmap –script=vnc-auth 192.168.10.10 获取vnc信息 nmap –script=vnc-info 192.168.10.10 （2）smb扫描 smb破解 nmap –script=smb-brute.nse 192.168.10.10 smb字典破解 nmap –script=smb-brute.nse –script-args=userdb=/var/passwd,passdb=/var/passwd IP 已知几个严重漏洞 nmap –script=smb-check-vulns.nse –script-args=unsafe=1 192.168.10.10 查看共享目录 nmap -p445 –script=smb-ls –script-args=share=e$,path=\\,subuser=test,smbpass=test IP 查询主机一些敏感信息（注：需下载nmap_service） nmap -p445 –script=smb-psexec –script-args=smbuser=test,smbpass=test IP 查看会话 nmap -p445 –script=smb-enum-sessions.nse –script-args=smbuser=test,smbpass=test IP 系统信息 nmap -n -p445 –script=smb-os-discovery.nse –script-args=smbuser=test,smbpass=test IP (3)Mssql扫描 猜解mssql用户名和密码 nmap -p1433 –script=ms-sql-brute.nes –script-args=userdb=/var/user,passdb=/var/passwd IP xp_cmdshell执行命令 nmap -p1433 –script=ms-sql-xp-cmdshell.nse –script-args=mssql.username=sa,mssql.password=sa，ms-sql-xp-cmdshell.cmd=”net user” 192.168.10.10 dumphash值 nmap -p1433 –script=ms-sql-dump-hashes.nse –script-srgs=mssql.username=sa,mssql.passwd=sa 192.168.10.10 （4）Mysql扫描 扫描root空口令 nmap -p3306 –script=mysql-empty-password.nse 192.168.10.10 列出所用mysql用户 nmap -p3306 –script=mysql-users.nse –script-args=mysqluser=root 192.168.10.10 支持同一应用的所有脚本扫描 nmap –script=mysql-* 192.168.10.10 （5）Oracle扫描 oracle sid 扫描 nmap -p1521-1560 –script=oracle-sid-brute.nse 192.168.10.10 oracle弱口令破解 nmap -p1521 –script=oracle-burte.nse –script-args=oracle-brute.sid=ORCL,userdb=/var/username,passdb=/var/passwd 192.168.10.10","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Tools","slug":"Study/Tools","permalink":"https://Elilen.github.io/categories/Study/Tools/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://Elilen.github.io/tags/Tools/"},{"name":"kali","slug":"kali","permalink":"https://Elilen.github.io/tags/kali/"},{"name":"nmap","slug":"nmap","permalink":"https://Elilen.github.io/tags/nmap/"}]},{"title":"Python编码","slug":"py-encode","date":"2019-04-26T04:01:57.000Z","updated":"2019-06-18T13:08:12.082Z","comments":true,"path":"2019/04/26/py-encode/","link":"","permalink":"https://Elilen.github.io/2019/04/26/py-encode/","excerpt":"python中遇到的编码问题","text":"python中遇到的编码问题 encode(编码): 按照某种规则将”文本”转换为”字节流”。python3中表示:unicode变成str decode(解码): 按照某种规则将”字节流”转换成”文本”。python3中表示:str变成unicode 123import sysimport osprint(\"nsbs\")","categories":[{"name":"Study","slug":"Study","permalink":"https://Elilen.github.io/categories/Study/"},{"name":"Python","slug":"Study/Python","permalink":"https://Elilen.github.io/categories/Study/Python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://Elilen.github.io/tags/python/"},{"name":"encode","slug":"encode","permalink":"https://Elilen.github.io/tags/encode/"},{"name":"decode","slug":"decode","permalink":"https://Elilen.github.io/tags/decode/"}]},{"title":"Blog美化","slug":"Blog","date":"2019-04-26T02:54:17.000Z","updated":"2019-06-17T14:56:43.443Z","comments":true,"path":"2019/04/26/Blog/","link":"","permalink":"https://Elilen.github.io/2019/04/26/Blog/","excerpt":"美化博客不归路","text":"美化博客不归路 开始从想搭博客开始，已经过了将近一个月了，直到今天晚上才完成，真的是好心累啊。各种崩盘各种难受，可能是我前端学的太菜了吧，我用了整整六天的时间，来完成这么一个大工程，最开始只是想好好的玩一下，结果。。。。。。。。哎，一言难尽啊，总结两点，第一不要想优化博客，第二请查看第一条。 ….手动哭…. 结束","categories":[{"name":"Life","slug":"Life","permalink":"https://Elilen.github.io/categories/Life/"},{"name":"daily","slug":"Life/daily","permalink":"https://Elilen.github.io/categories/Life/daily/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://Elilen.github.io/tags/hexo/"},{"name":"随笔","slug":"随笔","permalink":"https://Elilen.github.io/tags/随笔/"}]},{"title":"B Z","slug":"img","date":"2019-04-25T10:52:17.000Z","updated":"2019-07-23T02:48:20.906Z","comments":true,"path":"2019/04/25/img/","link":"","permalink":"https://Elilen.github.io/2019/04/25/img/","excerpt":"壁纸 偶尔分享一些","text":"壁纸 偶尔分享一些","categories":[{"name":"Life","slug":"Life","permalink":"https://Elilen.github.io/categories/Life/"},{"name":"daily","slug":"Life/daily","permalink":"https://Elilen.github.io/categories/Life/daily/"}],"tags":[{"name":"img","slug":"img","permalink":"https://Elilen.github.io/tags/img/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-04-18T08:14:38.000Z","updated":"2019-05-10T12:00:22.737Z","comments":true,"path":"2019/04/18/hello-world/","link":"","permalink":"https://Elilen.github.io/2019/04/18/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://Elilen.github.io/tags/hexo/"}]}]}